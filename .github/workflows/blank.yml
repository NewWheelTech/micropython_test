# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.10"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
            submodules: recursive
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Copy Override files
        working-directory: ./pimoroni-pico-overrides
        run: source copy_script.sh
      - name: Install packages
        run: source micropython/tools/ci.sh && ci_rp2_setup
      - name: Make Submodules and patch build script
        working-directory: ./micropython/ports/rp2
        shell: bash
        run: |
          make submodules
          git apply -v ../../../pimoroni-pico/micropython/micropython_nano_specs.patch
          echo Patch Complete
      - name: cmake
        working-directory: ./micropython/ports/rp2
        shell: bash
        run: cmake -S . -B build-RPI_PICO -DPICO_BUILD_DOCS=0 -DUSER_C_MODULES=../../../pimoroni-pico/micropython/modules/micropython-pico.cmake -DMICROPY_BOARD_DIR=`pwd`/../../../pimoroni-pico/micropython/board/PICO/ -DMICROPY_BOARD=pico --fresh
      - name: cmake build
        working-directory: ./micropython/ports/rp2
        shell: bash
        run: cmake --build build-RPI_PICO -j 1
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
      - uses: actions/upload-artifact@v3
        with:
            name: firmware.uf2
            path: micropython/ports/rp2/build-RPI_PICO/firmware.uf2
